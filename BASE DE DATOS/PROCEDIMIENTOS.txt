create or replace PROCEDURE LISPARTESPORRANGO
(FECHA1 IN PARTE.FECHA%TYPE, FECHA2 IN PARTE.FECHA%TYPE, TODO OUT sys_refcursor)
IS  
BEGIN
open todo for
SELECT NUM_PARTE, TRABAJADOR_USUARIO, FECHA, ESTADO,  KM_PRINCIPIO, KM_FINAL, GASTO_GASOIL, GASTO_AUTOPISTA, 
GASTO_DIETAS, GASTOS_VARIOS, INCIDENCIAS, VALIDADO,  TOTAL_HORAS  FROM PARTE
WHERE (PARTE.FECHA BETWEEN FECHA1 AND FECHA2);
EXCEPTION
WHEN NO_DATA_FOUND THEN RAISE_APPLICATION_ERROR (-20007, 'No existe el parte');
WHEN OTHERS THEN raise_application_error (-20009, 'Error');
END LISPARTESPORRANGO;


create or replace PROCEDURE LISPARTESPORRANGOABIERTOS
(FECHA1 IN PARTE.FECHA%TYPE, FECHA2 IN PARTE.FECHA%TYPE, TODO OUT sys_refcursor)
IS  
BEGIN
open todo for
SELECT NUM_PARTE, TRABAJADOR_USUARIO, FECHA, ESTADO,  KM_PRINCIPIO, KM_FINAL, GASTO_GASOIL, GASTO_AUTOPISTA, 
GASTO_DIETAS, GASTOS_VARIOS, INCIDENCIAS, VALIDADO,  TOTAL_HORAS  FROM PARTE
WHERE (PARTE.FECHA BETWEEN FECHA1 AND FECHA2) AND PARTE.ESTADO = 'ABIERTO';
EXCEPTION
WHEN NO_DATA_FOUND THEN RAISE_APPLICATION_ERROR (-20007, 'No existe el parte');
WHEN OTHERS THEN raise_application_error (-20009, 'Error');
END LISPARTESPORRANGOABIERTOS;


create or replace PROCEDURE LISPARTESPORRANGOCERRADOS
(FECHA1 IN PARTE.FECHA%TYPE, FECHA2 IN PARTE.FECHA%TYPE, TODO OUT sys_refcursor)
IS  
BEGIN
open todo for
SELECT NUM_PARTE, TRABAJADOR_USUARIO, FECHA, ESTADO,  KM_PRINCIPIO, KM_FINAL, GASTO_GASOIL, GASTO_AUTOPISTA, 
GASTO_DIETAS, GASTOS_VARIOS, INCIDENCIAS, VALIDADO,  TOTAL_HORAS  FROM PARTE
WHERE (PARTE.FECHA BETWEEN FECHA1 AND FECHA2) AND PARTE.ESTADO = 'CERRADO';
EXCEPTION
WHEN NO_DATA_FOUND THEN RAISE_APPLICATION_ERROR (-20007, 'No existe el parte');
WHEN OTHERS THEN raise_application_error (-20009, 'Error');
END LISPARTESPORRANGOCERRADOS;


create or replace PROCEDURE LISPARTESPORTRABAJADORYRANGO
(TRAB IN PARTE.TRABAJADOR_USUARIO%TYPE, FECHA1 IN PARTE.FECHA%TYPE, FECHA2 IN PARTE.FECHA%TYPE, TODO OUT sys_refcursor)
IS  
BEGIN
open todo for
SELECT NUM_PARTE, TRABAJADOR_USUARIO, FECHA, ESTADO,  KM_PRINCIPIO, KM_FINAL, GASTO_GASOIL, GASTO_AUTOPISTA, 
GASTO_DIETAS, GASTOS_VARIOS, INCIDENCIAS, VALIDADO,  TOTAL_HORAS  FROM PARTE
WHERE (PARTE.FECHA BETWEEN FECHA1 AND FECHA2) and PARTE.TRABAJADOR_USUARIO= TRAB;
EXCEPTION
WHEN NO_DATA_FOUND THEN RAISE_APPLICATION_ERROR (-20007, 'No existe el parte');
WHEN OTHERS THEN raise_application_error (-20009, 'Error');
END LISPARTESPORTRABAJADORYRANGO;


create or replace PROCEDURE LISPARTESTRABAJADORYRANGOABI
(TRAB IN PARTE.TRABAJADOR_USUARIO%TYPE, FECHA1 IN PARTE.FECHA%TYPE, FECHA2 IN PARTE.FECHA%TYPE, TODO OUT sys_refcursor)
IS  
BEGIN
open todo for
SELECT NUM_PARTE, TRABAJADOR_USUARIO, FECHA, ESTADO,  KM_PRINCIPIO, KM_FINAL, GASTO_GASOIL, GASTO_AUTOPISTA, 
GASTO_DIETAS, GASTOS_VARIOS, INCIDENCIAS, VALIDADO,  TOTAL_HORAS  FROM PARTE
WHERE (PARTE.FECHA BETWEEN FECHA1 AND FECHA2) and PARTE.TRABAJADOR_USUARIO= TRAB AND PARTE.ESTADO = 'ABIERTO';
EXCEPTION
WHEN NO_DATA_FOUND THEN RAISE_APPLICATION_ERROR (-20007, 'No existe el parte');
WHEN OTHERS THEN raise_application_error (-20009, 'Error');
END LISPARTESTRABAJADORYRANGOABI;


create or replace PROCEDURE LISPARTESTRABAJADORYRANGOCER
(TRAB IN PARTE.TRABAJADOR_USUARIO%TYPE, FECHA1 IN PARTE.FECHA%TYPE, FECHA2 IN PARTE.FECHA%TYPE, TODO OUT sys_refcursor)
IS  
BEGIN
open todo for
SELECT NUM_PARTE, TRABAJADOR_USUARIO, FECHA, ESTADO,  KM_PRINCIPIO, KM_FINAL, GASTO_GASOIL, GASTO_AUTOPISTA, 
GASTO_DIETAS, GASTOS_VARIOS, INCIDENCIAS, VALIDADO,  TOTAL_HORAS  FROM PARTE
WHERE (PARTE.FECHA BETWEEN FECHA1 AND FECHA2) and PARTE.TRABAJADOR_USUARIO= TRAB AND PARTE.ESTADO = 'CERRADO';
EXCEPTION
WHEN NO_DATA_FOUND THEN RAISE_APPLICATION_ERROR (-20007, 'No existe el parte');
WHEN OTHERS THEN raise_application_error (-20009, 'Error');
END LISPARTESTRABAJADORYRANGOCER;


create or replace procedure LISTACENTROS (LISTAC OUT SYS_REFCURSOR)
AS
VACIO EXCEPTION;
MAS_ERRORES EXCEPTION;
BEGIN
OPEN LISTAC FOR
SELECT * FROM CENTRO;
EXCEPTION
WHEN NO_DATA_FOUND THEN RAISE VACIO;
WHEN OTHERS THEN RAISE MAS_ERRORES;
END LISTACENTROS;


create or replace procedure LISTAPARTESABIERTOS (LISTA OUT SYS_REFCURSOR)
AS
VACIO EXCEPTION;
MAS_ERRORES EXCEPTION;
BEGIN
OPEN LISTA FOR
SELECT NUM_PARTE, KM_PRINCIPIO, KM_FINAL, FECHA, ESTADO, GASTO_GASOIL, GASTO_AUTOPISTA, 
GASTO_DIETAS, GASTOS_VARIOS, INCIDENCIAS, VALIDADO, TRABAJADOR_USUARIO, TOTAL_HORAS  FROM PARTE
WHERE ESTADO = 'ABIERTO'
ORDER BY TRABAJADOR_USUARIO, FECHA;
EXCEPTION
WHEN NO_DATA_FOUND THEN RAISE VACIO;
WHEN OTHERS THEN RAISE MAS_ERRORES;
END LISTAPARTESABIERTOS;


create or replace procedure LISTAPARTESCERRADOS (LISTA OUT SYS_REFCURSOR)
AS
BEGIN
OPEN LISTA FOR
SELECT NUM_PARTE, KM_PRINCIPIO, KM_FINAL, FECHA, ESTADO, GASTO_GASOIL, GASTO_AUTOPISTA, 
GASTO_DIETAS, GASTOS_VARIOS, INCIDENCIAS, VALIDADO, TRABAJADOR_USUARIO, TOTAL_HORAS  FROM PARTE
WHERE ESTADO = 'CERRADO'
ORDER BY TRABAJADOR_USUARIO, FECHA;
EXCEPTION
WHEN NO_DATA_FOUND THEN RAISE_APPLICATION_ERROR (-20007, 'No existe el trabajador');
WHEN TOO_MANY_ROWS THEN raise_application_error (-2008, 'Más de un resultado');
WHEN OTHERS THEN raise_application_error (-2009, 'Error');
END LISTAPARTESCERRADOS;


create or replace procedure LISTARPARTES (LISTA OUT SYS_REFCURSOR)
AS
VACIO EXCEPTION;
MAS_ERRORES EXCEPTION;
BEGIN
OPEN LISTA FOR
SELECT NUM_PARTE, KM_PRINCIPIO, KM_FINAL, FECHA, ESTADO, GASTO_GASOIL, GASTO_AUTOPISTA, 
GASTO_DIETAS, GASTOS_VARIOS, INCIDENCIAS, VALIDADO, TRABAJADOR_USUARIO, TOTAL_HORAS  FROM PARTE
ORDER BY TRABAJADOR_USUARIO, FECHA;
EXCEPTION
WHEN NO_DATA_FOUND THEN RAISE VACIO;
WHEN OTHERS THEN RAISE MAS_ERRORES;
END LISTARPARTES;


create or replace PROCEDURE LISTARUNCENTRO (  NOMBRE_CENTRO IN CENTRO.NOMBRE%TYPE, todo OUT sys_refcursor)
IS
VACIO EXCEPTION;
MAS_ERRORES EXCEPTION;  
BEGIN
open todo for
SELECT NOMBRE, CALLE, NUMERO, CODIGO_POSTAL, TELEFONO, CIUDAD, PROVINCIA, CENTRO_ID FROM CENTRO WHERE NOMBRE = NOMBRE_CENTRO;
EXCEPTION
WHEN NO_DATA_FOUND THEN RAISE VACIO;
END LISTARUNCENTRO;


create or replace PROCEDURE LISTARUNTRABAJADOR ( dni_trabajador IN TRABAJADOR.DNI%TYPE, TODO OUT sys_refcursor)
IS  
BEGIN
open todo for
SELECT DNI, NOMBRE, APELLIDO_1, APELLIDO_2, CALLE, PORTAL, PISO, MANO, CATEGORIA, CENTRO_ID, TELEFONO_EMPRESA, TELEFONO_PERSONAL, SALARIO, FECHA_NACIMIENTO
FROM TRABAJADOR WHERE DNI = dni_trabajador;
EXCEPTION
WHEN NO_DATA_FOUND THEN RAISE_APPLICATION_ERROR (-20007, 'No existe el trabajador');
WHEN TOO_MANY_ROWS THEN raise_application_error (-2008, 'Más de un resultado');
WHEN OTHERS THEN raise_application_error (-2009, 'Error');
END LISTARUNTRABAJADOR;



create or replace procedure LISTARVIAJES (LISTA OUT SYS_REFCURSOR)
AS
VACIO EXCEPTION;
MAS_ERRORES EXCEPTION;
BEGIN
OPEN LISTA FOR
SELECT *  FROM VIAJE
ORDER BY PARTE_NUM_PARTE;
EXCEPTION
WHEN NO_DATA_FOUND THEN RAISE VACIO;
WHEN OTHERS THEN RAISE MAS_ERRORES;
END LISTARVIAJES;


create or replace procedure LISTATRABAJADORES (LISTA OUT SYS_REFCURSOR)
AS
VACIO EXCEPTION;
MAS_ERRORES EXCEPTION;
BEGIN
OPEN LISTA FOR
SELECT * FROM TRABAJADOR;
EXCEPTION
WHEN NO_DATA_FOUND THEN RAISE VACIO;
WHEN OTHERS THEN RAISE MAS_ERRORES;
END LISTATRABAJADORES;




create or replace procedure LISTAVEHICULOS (LISTAV OUT SYS_REFCURSOR)
AS
VACIO EXCEPTION;
MAS_ERRORES EXCEPTION;
BEGIN
OPEN LISTAV FOR
SELECT * FROM VEHICULO;
EXCEPTION
WHEN NO_DATA_FOUND THEN RAISE VACIO;
WHEN OTHERS THEN RAISE MAS_ERRORES;
END LISTAVEHICULOS;



